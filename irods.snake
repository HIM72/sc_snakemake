import os
import snakemake
from utils.irods import Collection
import json
from pprint import pprint
import pandas as pd

# config = snakemake.load_configfile('config.json')
with open('config.json') as fh:
    config = json.load(fh)
collection = Collection(config['study_id'])
items = collection.get_collection_metadata()
with open('items.json', 'w') as fh:
    json.dump(items, fh)

object_collection = {q['data_object']: q['collection'] for q in items}
cram_folder = os.path.join(config['data_folder'], 'cram')
LOG_FOLDER = "logs"

# Get list of data objects

rule all:
    input:
        expand(os.path.join(config['data_folder'], 'cram',
                '{sample}'), sample=[query['data_object'] for query in items]),
        os.path.join(config['results_directory'], "irods_metadata.csv")

rule baton_query:
    output:
        os.path.join(cram_folder, '{sample}')
    log:
        os.path.join(LOG_FOLDER, "irods", "{sample}.log")
    run:
        collection.execute_baton(
            'baton-get --save', 
            query={'collection': object_collection[wildcards.sample],
                   'data_object': wildcards.sample,
                   'directory': cram_folder})

rule irods_metadata:
    output:
        os.path.join(config['results_directory'], "irods_metadata.csv")
    run:
        index_metadata = {item['data_object']: item['avus'] for item in items}
        df = pd.DataFrame.from_dict(index_metadata, orient='index')
        df.to_csv(output[0])

